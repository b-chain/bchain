// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package transaction

import (
	"encoding/json"
	"errors"
	"bchain.io/common/types"
)

var _ = (*txHeaderMarshaling)(nil)

func (t TxHeader) MarshalJSON() ([]byte, error) {
	type TxHeader struct {
		Nonce types.Uint64ForJson `json:"AccountNonce"   gencodec:"required"`
	}
	var enc TxHeader
	enc.Nonce = types.Uint64ForJson(t.Nonce)
	return json.Marshal(&enc)
}

func (t *TxHeader) UnmarshalJSON(input []byte) error {
	type TxHeader struct {
		Nonce *types.Uint64ForJson `json:"AccountNonce"   gencodec:"required"`
	}
	var dec TxHeader
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Nonce == nil {
		return errors.New("missing required field 'AccountNonce' for TxHeader")
	}
	t.Nonce = uint64(*dec.Nonce)
	return nil
}
